<reactiveui:ReactiveWindow x:Class="UMFDExtractor.MainWindow"
                           x:TypeArguments="vm:MainWindowViewModel"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:reactiveui="http://reactiveui.net"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:UMFDExtractor.ViewModels"
        xmlns:conv="clr-namespace:UMFDExtractor.Converters"
        xmlns:local="clr-namespace:UMFDExtractor"
        d:DataContext ="{d:DesignInstance {x:Type vm:MainWindowViewModel}, IsDesignTimeCreatable=True}"
        mc:Ignorable="d"
                           Closing="ReactiveWindow_Closing"
        Title="MainWindow" SizeToContent="WidthAndHeight" ResizeMode="CanResizeWithGrip">
    <StackPanel Margin="10">
        <StackPanel.Resources>
            <conv:VisibilityConverter x:Key="VisibilityConverter" />
            <Style TargetType="Button">
                <Setter Property="Padding"              Value="10" />
                <Setter Property="Margin"              Value="10" />
                <Setter Property="FontSize"              Value="24" />
            </Style>
            <Style TargetType="CheckBox">
                <Setter Property="Padding"              Value="10" />
                <Setter Property="Margin"              Value="10" />
                <Setter Property="FontSize"              Value="24" />
            </Style>
            <Style TargetType="ComboBox">
                <Setter Property="Padding"              Value="10" />
                <Setter Property="Margin"              Value="10" />
                <Setter Property="FontSize"              Value="24" />
            </Style>
        </StackPanel.Resources>
        <ComboBox ItemsSource="{Binding Clients}" DisplayMemberPath="Key" SelectedValuePath="Value" SelectedValue="{Binding SelectedClient}" IsEnabled="{Binding Client.Running, Converter={StaticResource VisibilityConverter}, ConverterParameter=not}" />
        <StackPanel Orientation="Horizontal" IsEnabled="{Binding SelectedClient, Converter={StaticResource VisibilityConverter}}">
            <Button Content="Start"
              Command="{Binding Client.StartCommand}" IsEnabled="{Binding Client.Running, Converter={StaticResource VisibilityConverter}, ConverterParameter=!not}"/>
            <Button Content="Stop"
              Command="{Binding Client.StopCommand}" IsEnabled="{Binding Client.Running}"/>
            <Button Command="{Binding OpenKSPValuesWindowCommand}" IsEnabled="{Binding Client.KSPValues, Converter={StaticResource VisibilityConverter}, FallbackValue=False}">KSPValues</Button>
            <Button Command="{Binding OpenEHSIWindowCommand}" IsEnabled="{Binding Client.EHSI, Converter={StaticResource VisibilityConverter}, FallbackValue=False}">EHSI</Button>
            <Button Command="{Binding OpenWaypointsWindowCommand}">Waypoints</Button>
            <Button Click="Button_Click">Properties</Button>
        </StackPanel>
        <CheckBox IsChecked="{Binding Client.Running, Mode=OneWay}" IsEnabled="False">Running</CheckBox>
        <TextBox Text="{Binding Client.Status, Mode=OneWay}" AcceptsReturn="True" Height="100" IsReadOnly="True" IsReadOnlyCaretVisible="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" />
    </StackPanel>
</reactiveui:ReactiveWindow>
